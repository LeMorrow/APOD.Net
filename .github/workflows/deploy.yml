name: Deploy

on:
  push:
    branches:
      - "release"

jobs:
  # Creates the .nupkg with dotnet pack and uploads it as an artifact 
  create_package:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v1
    
    - name: Create NuGet package
      run: dotnet pack src/Apod/Apod.csproj -c Release --output nupkgs
    
    - name: Upload package artifact
      uses: actions/upload-artifact@v1
      with:
        name: nupkg
        path: nupkgs
  
  # Pushes the .nupkg to NuGet.org
  push_nuget:
    needs: create_package
    runs-on: ubuntu-latest
    
    steps:
    - name: Download package artifact
      uses: actions/download-artifact@v1
      with:
        name: nupkg
    
    - name: Push package to NuGet.org
      run: dotnet nuget push nupkg/*.nupkg --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_API_KEY }}

  # Pushes the .nupkg to Github Package Registry
  push_gpr:
    needs: create_package
    runs-on: windows-latest # See https://github.com/NuGet/Home/issues/8580
  
    steps:
    - name: Download package artifact
      uses: actions/download-artifact@v1
      with:
        name: nupkg

    - uses: nuget/setup-nuget@v1
      with:
        nuget-api-key: ${{ secrets.NUGET_API_KEY }}
        nuget-version: 'latest'
    
    - name: Push package to the Github Package Registry
      run: |        
        nuget sources Add -Name "GPR" -Source "https://nuget.pkg.github.com/lemorrow/index.json" -UserName LeMorrow -Password ${{ secrets.GITHUB_TOKEN }}
        nuget setApiKey ${{ secrets.NUGET_API_KEY }} -Source "GPR"
        nuget push nupkg\*.nupkg -Source "GPR" -SkipDuplicate

  # Generates the documentation with DocFX and uploads the static website as an artifact
  generate_docs:
    runs-on: windows-latest # On windows because DocFX was difficult to install on other machines
    
    steps:
    - uses: actions/checkout@v1
    
    - uses: nuget/setup-nuget@v1
      with:
        nuget-api-key: ${{ secrets.NUGET_API_KEY }}
        nuget-version: 'latest'
      
    - name: Install DocFX
      run: nuget install docfx.console -Version 2.47.0
    
    - name: Generate site with DocFX
      run: |
       docfx.console.2.47.0\tools\docfx.exe metadata docs/docfx.json
       docfx.console.2.47.0\tools\docfx.exe build docs/docfx.json
      
    - name: Upload site artifact
      uses: actions/upload-artifact@v1
      with:
        name: site
        path: docs/_site
  
  # Publishes the documentation website to the gh-pages branch
  deploy_docs:
    needs: generate_docs
    runs-on: ubuntu-latest 

    steps:
    
    - name: Download site artifact
      uses: actions/download-artifact@v1
      with:
        name: site
    
    - name: Deploy site to gh-pages branch
      uses: JamesIves/github-pages-deploy-action@releases/v3
      with:
        ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        BASE_BRANCH: release
        BRANCH: gh-pages
        FOLDER: site
